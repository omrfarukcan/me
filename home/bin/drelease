#!/bin/sh
#
# Commit changes to a debian package to svn or cvs repositpry, and also release
# it to debian.  This does a commit and also tags the package in repository. If
# you pass in parameters, they will be passed to dput.
# Based on the original work by Joey Hess <joey@kitenet.net>
#
# Recai Okta≈ü <roktas@omu.edu.tr>
# Last modified: Sun, 30 May 2004 13:53:01 +0300


set -e

if [ ! -f debian/changelog ]; then
	echo 2>&1 "$0: must be in the top level source directory."
	exit 1
fi

package=$(head -1 debian/changelog | cut -f 1 -d ' ')
version=$(dpkg-parsechangelog | grep Version: | cut -f 2 -d ' ')

# Sign my upload.
debsign

dcommit

if [ -d CVS ]; then
	# Mark the files as released (I hope to use that info later).
	cvs admin -sRel
fi
	
# Generate the tag. This is compatable with the tag cvs-buildpackage uses
# except for debian native packages.
newversion=$(expr $version : '[0-9]:\(.*\)') 2>/dev/null || true
if [ "$newversion" ]; then
	version=$newversion
fi

# Alternative tagging style.
if [ "$(expr $version : '.*-.*')" -gt 0 ]; then
	tag="debian_version_$version"
else
	tag="version_$version"
fi

if [ -d CVS ]; then
	# Escape tag for cvs.
	tag=$(echo "$tag" | tr . _)
	cvs tag -f $tag
elif [ -d .svn ]; then
	# We prefer plain version as tag name.
	svntag $version "* Release of version $version."
fi

if grep -q -i non-us debian/control; then
	echo "Why non-us in this day and age?"
	exit 1
fi

# Upload anything that is pending.
cd ..
if [ -z "$1" ]; then
	dput -u release ${package}_${version}_*.changes
else
	dput -u $@ ${package}_${version}_*.changes
fi

# Delete all versions of files for the package we just uploaded.
FILES=$(egrep '^ [0-9a-f]{32} [0-9]* ' ${package}_*.changes | cut -d ' ' -f 6)
rm -f $FILES

# Also, try to remove past versions that were never uploaded.
rm -f ${package}_*.changes ${package}_*.upload ${package}_*.tar.gz ${package}_*.deb
